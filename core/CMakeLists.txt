#Enforce the highest possible version that the current Ubuntu LTS provides
#by default. We want to be sure to have the ability to attach as many things
#to the target as modern cmake code affords us
cmake_minimum_required(VERSION 3.16 FATAL_ERROR)

set(GODOT_CORE_BASE_DIR ${GODOT_ENGINE_ROOT_DIRECTORY}/core)
set(GODOT_SOURCE_ROOT_PLATFORM_DIR ${GODOT_ENGINE_ROOT_DIRECTORY}/platform)
set(GODOT_SOURCE_ROOT_THIRDPARTY_DIR ${GODOT_ENGINE_ROOT_DIRECTORY}/thirdparty)

add_definitions(-DTOOLS_ENABLED)
add_definitions(-DDEBUG_ENABLED)
add_definitions(-DCLIPPER2_ENABLED)



file(GLOB  GODOT_CORE_SOURCE "${GODOT_CORE_BASE_DIR}/*.cpp" "${GODOT_CORE_BASE_DIR}/*.h")
file(GLOB  GODOT_CORE_OBJECT_SOURCE "${GODOT_CORE_BASE_DIR}/object/*.cpp" "${GODOT_CORE_BASE_DIR}/object/*.h")
file(GLOB  GODOT_CORE_MATH_SOURCE "${GODOT_CORE_BASE_DIR}/math/*.cpp" "${GODOT_CORE_BASE_DIR}/math/*.h")
file(GLOB  GODOT_CORE_STRING_SOURCE "${GODOT_CORE_BASE_DIR}/string/*.cpp" "${GODOT_CORE_BASE_DIR}/string/*.h")
file(GLOB  GODOT_CORE_CONFIG_SOURCE "${GODOT_CORE_BASE_DIR}/config/*.cpp" "${GODOT_CORE_BASE_DIR}/config/*.h")
file(GLOB  GODOT_CORE_CRYPTO_SOURCE "${GODOT_CORE_BASE_DIR}/crypto/*.cpp" "${GODOT_CORE_BASE_DIR}/crypto/*.h")
file(GLOB  GODOT_CORE_DEBUGGER_SOURCE "${GODOT_CORE_BASE_DIR}/debugger/*.cpp" "${GODOT_CORE_BASE_DIR}/debugger/*.h")
file(GLOB  GODOT_CORE_ERROR_SOURCE "${GODOT_CORE_BASE_DIR}/error/*.cpp" "${GODOT_CORE_BASE_DIR}/error/*.h")
file(GLOB  GODOT_CORE_EXTENSION_SOURCE "${GODOT_CORE_BASE_DIR}/extension/*.cpp" "${GODOT_CORE_BASE_DIR}/extension/*.h")
file(GLOB  GODOT_CORE_INPUT_SOURCE "${GODOT_CORE_BASE_DIR}/input/*.cpp" "${GODOT_CORE_BASE_DIR}/input/*.h")
file(GLOB  GODOT_CORE_TEMPLATES_SOURCE "${GODOT_CORE_BASE_DIR}/templates/*.cpp" "${GODOT_CORE_BASE_DIR}/templates/*.h")
file(GLOB  GODOT_CORE_IO_SOURCE "${GODOT_CORE_BASE_DIR}/io/*.cpp" "${GODOT_CORE_BASE_DIR}/io/*.h")
file(GLOB  GODOT_CORE_OS_SOURCE "${GODOT_CORE_BASE_DIR}/os/*.cpp" "${GODOT_CORE_BASE_DIR}/os/*.h")
file(GLOB  GODOT_CORE_VARIANT_SOURCE "${GODOT_CORE_BASE_DIR}/variant/*.cpp" "${GODOT_CORE_BASE_DIR}/variant/*.h")


list(APPEND GODOT_CORE_SOURCE ${GODOT_CORE_OBJECT_SOURCE})
list(APPEND GODOT_CORE_SOURCE ${GODOT_CORE_OBJECT_SOURCE})
list(APPEND GODOT_CORE_SOURCE ${GODOT_CORE_MATH_SOURCE})
list(APPEND GODOT_CORE_SOURCE ${GODOT_CORE_STRING_SOURCE})
list(APPEND GODOT_CORE_SOURCE ${GODOT_CORE_CONFIG_SOURCE})
list(APPEND GODOT_CORE_SOURCE ${GODOT_CORE_CRYPTO_SOURCE})
list(APPEND GODOT_CORE_SOURCE ${GODOT_CORE_DEBUGGER_SOURCE})
list(APPEND GODOT_CORE_SOURCE ${GODOT_CORE_ERROR_SOURCE})
list(APPEND GODOT_CORE_SOURCE ${GODOT_CORE_EXTENSION_SOURCE})
list(APPEND GODOT_CORE_SOURCE ${GODOT_CORE_INPUT_SOURCE})
list(APPEND GODOT_CORE_SOURCE ${GODOT_CORE_TEMPLATES_SOURCE})
list(APPEND GODOT_CORE_SOURCE ${GODOT_CORE_IO_SOURCE})
list(APPEND GODOT_CORE_SOURCE ${GODOT_CORE_OS_SOURCE})
list(APPEND GODOT_CORE_SOURCE ${GODOT_CORE_VARIANT_SOURCE})

foreach(file ${GODOT_CORE_SOURCE})
    file(RELATIVE_PATH relative_path "${CMAKE_CURRENT_SOURCE_DIR}" "${file}")
    get_filename_component(dir_path "${relative_path}" DIRECTORY)
    string(REPLACE "/" "\\" vs_filter "${dir_path}")
    source_group("${vs_filter}" FILES "${file}")
endforeach()

add_library(godot-core STATIC ${GODOT_CORE_SOURCE})

target_include_directories(godot-core PUBLIC 
${GODOT_ENGINE_ROOT_DIRECTORY} 
${GODOT_SOURCE_ROOT_PLATFORM_DIR}/windows
${GODOT_SOURCE_ROOT_THIRDPARTY_DIR}/clipper2/include
${GODOT_SOURCE_ROOT_THIRDPARTY_DIR}/mbedtls/include
${GODOT_SOURCE_ROOT_THIRDPARTY_DIR}/zlib
${GODOT_SOURCE_ROOT_THIRDPARTY_DIR}/zstd
)


